basePath: /
definitions:
  models.Role:
    properties:
      description:
        type: string
      id:
        type: integer
      name:
        type: string
    type: object
  models.User:
    properties:
      balance:
        type: number
      created_at:
        type: string
      email:
        type: string
      id:
        type: integer
      last_login:
        type: string
      pfp_url:
        type: string
      updated_at:
        type: string
      username:
        type: string
    type: object
host: localhost:8080
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: This is a sample server for MicroShopik.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: MicroShopik API
  version: "1.0"
paths:
  /aboba:
    get:
      consumes:
      - application/json
      description: Get a hello message
      produces:
      - text/plain
      responses:
        "200":
          description: Hello, World!
          schema:
            type: string
      summary: Say hello
      tags:
      - hello
  /roles:
    get:
      consumes:
      - application/json
      description: Retrieve all roles from the database
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Role'
            type: array
      summary: Get all roles
      tags:
      - roles
  /users:
    get:
      consumes:
      - application/json
      description: Retrieve all users from the database
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.User'
            type: array
      summary: Get all users
      tags:
      - users
    post:
      consumes:
      - application/json
      description: Create a new user in the database
      parameters:
      - description: User object
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.User'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.User'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Create a new user
      tags:
      - users
  /users/{id}:
    get:
      consumes:
      - application/json
      description: Retrieve a user by their ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get user by ID
      tags:
      - users
  /users/{id}/roles:
    get:
      consumes:
      - application/json
      description: Retrieve all roles for a specific user
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Role'
            type: array
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get user roles
      tags:
      - users
swagger: "2.0"
